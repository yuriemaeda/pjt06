# -*- coding: utf-8 -*-
"""pjt06_講義スライド作成をサポートするcopilot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j_0jIaI2DGIu_GkvW31Ul2KVwGYESOBY
"""

!pip install python-pptx

from google.colab import files

uploaded = files.upload()

# スライドテキスト抽出
from pptx import Presentation

def extract_text_from_pptx(file_path):
    prs = Presentation(file_path)
    slide_texts = []

    for i, slide in enumerate(prs.slides):
        text = ""
        for shape in slide.shapes:
            if hasattr(shape, "text"):
                text += shape.text + "\n"
        slide_texts.append((f"Slide {i+1}", text.strip()))

    return slide_texts

# 抽出して表示
file_name = list(uploaded.keys())[0]

slides = extract_text_from_pptx(file_name)

for slide_num, content in slides:
    print(f"\n=== {slide_num} ===\n{content}")

!pip install google-generativeai

!pip install --upgrade google-generativeai

import google.generativeai as genai

genai.configure(api_key="自分のAPI")

model = genai.GenerativeModel("models/gemini-2.5-pro")

def generate_suggestions_gemini(slide_text):
    prompt = f"""
あなたは講義の補助AIです。
以下はスライドの内容です。この内容に基づいて、
1. 学生から想定される質問（2〜3個）
2. 追加すべき補足説明（2〜3個）
を、簡潔かつ明確に日本語で出力してください。

# スライド内容:
{slide_text}
"""
    response = model.generate_content(prompt)
    return response.text  # ここでエラーになる場合は print(dir(response)) で中身確認

print(generate_suggestions_gemini("Omnicampusの使い方\n許諾なく撮影や第三者への開示を禁止します"))

for slide_num, content in slides:
    print(f"\n=== {slide_num} ===")
    print(f"📄 スライド内容:\n{content}\n")
    print("💡 Geminiのサジェスト:")
    try:
        suggestion = generate_suggestions_gemini(content)
        print(suggestion)
    except Exception as e:
        print(f"⚠️ エラー: {e}")

# Geminiの出力をまとめてファイル保存
with open("gemini_feedback.txt", "w", encoding="utf-8") as f:
    for slide_num, content in slides:
        feedback = generate_suggestions_gemini(content)
        f.write(f"=== {slide_num} ===\n📄 スライド内容:\n{content}\n\n💡 Geminiのサジェスト:\n{feedback}\n\n\n")